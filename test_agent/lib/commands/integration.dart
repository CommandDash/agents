import 'package:dash_agent/configuration/command.dart';
import 'package:dash_agent/steps/steps.dart';
import 'package:dash_agent/variables/dash_input.dart';
import 'package:dash_agent/variables/dash_output.dart';

class IntegrationCommand extends Command {
  // inputs
  final testFlow = StringInput('Test Flow', optional: false);
  final testCode1 = CodeInput('Code 1', optional: false);
  final testCode2 = CodeInput('Code 2', optional: true);
  final testCode3 = CodeInput('Code 3', optional: true);
  final testCode4 = CodeInput('Code 4', optional: true);
  final testCode5 = CodeInput('Code 5', optional: true);
  final testCode6 = CodeInput('Code 6', optional: true);
  final testCode7 = CodeInput('Code 7', optional: true);

  final extraDetails = StringInput('Additional Details', optional: true);

  final reference1 = CodeInput('Existing Reference', optional: true);
  final reference2 = CodeInput('Existing Reference', optional: true);

  // outputs
  final executionStepOuput = PromptOutput();
  final starterTemplateOutput = PromptOutput();
  final referenceFilledGeneratedTest = PromptOutput();
  final integrationTestOutput = PromptOutput();

  @override
  String get slug => 'integration';

  @override
  String get intent => 'Generate integration test';

  @override
  List<DashInput> get registerInputs => [
        testFlow,
        testCode1,
        testCode2,
        testCode3,
        testCode4,
        testCode5,
        testCode6,
        testCode7,
        extraDetails,
        reference1,
        reference2
      ];

  @override
  String get textFieldLayout =>
      "Hi, I'm here to help you generate integration test for your code base. Please share the following info: test flow: $testFlow\nWidget Codes: $testCode1 $testCode2 $testCode3 $testCode4 $testCode5 $testCode6 $testCode7 \nReferences: $reference1 $reference2 \n $extraDetails";

  @override
  List<Step> get steps => [
        PromptQueryStep(
            prompt:
                '''You are a Flutter Integrations Test writing assistant. Your task is to assist in generating integration tests by completing one of the many tasks given below that will be help in generating reliable integration tests.
  
  Prepare execution steps for the below integration test scenario:
  
  Test Flow: $testFlow
  
  Contextual Code from User's Project:
  ```dart
  // contextual code 1
  $testCode1

  // contextual code 2
  $testCode2

  // contextual code 3
  $testCode3

  // contextual code 4
  $testCode4

  // contextual code 5
  $testCode5

  // contextual code 6
  $testCode6

  // contextual code 7
  $testCode7
  ````
  
  Additional Instruction from User:
  $extraDetails

  Existing Integration Test from User's project:
  ```dart
  // integration test reference 1
  $reference1

  // integration test referece 2
  $reference2
  ```

  You may reuse or refer the above tests to:
  1. Fill in steps for parts for which contextual code might be missing (like app launch, reaching a certain page, etc).
  2. Output steps that match user's test writing pattern.
  
  Sample Execution Steps (Unrelated to above test flow):
  - Launch the app and wait for the Login screen to be displayed
  - Wait for the Login screen to be displayed
  - Submit the credentials in the Login Page and attempt to login
  - Check if successful login takes user to Home Page or else error dialog is displayed

  Note:
  1. Only generate execution steps at the moment and nothing else.
  2. Be clear and concise with the steps. As this steps will help in generating integration test code in further steps.
  ''',
            promptOutput: executionStepOuput),
        PromptQueryStep(
            prompt:
                '''You are a Flutter Integrations Test writing assistant. Your task is to assist in generating integration tests by completing one of the many tasks given below that will be help in generating reliable integration tests.

  Generate a starter template for integration test using the testflow <Test Flow> and execution steps <Execution Steps> generated by other assistant:

  Test Flow: $testFlow
  
  Execution Steps:
  $executionStepOuput
  
  Sample example for generating starter template when having <Execution Steps> and <Test Flow>:

  Test Flow: On the Login Screen, entering credentials and logging in takes user to the main screen

  Sample Execution Steps Response:
  "Some verbose information [Not a Execution Step]
  - Launch the app and wait for the Login screen to be displayed [Execution Step]
  - Submit the credentials in the Login Page and attempt to login [Execution Step]
  - Check if successful login takes user to Home Page or else error dialog is displayed [Execution Step]
  Some verbose information [Not a Execution Step]"
  
  In the above sample execution example, lines having [Execution Step] at the end represnt an execution steps and rest should not be treated as an execution steps.

  Sample started template based on the Sample Execution Step Response:
  ```dart
  void main() {
    testWidgets('On the Login Screen, entering credentials and logging in takes user to the main screen',
      (WidgetTester tester) {
    // Launch the app and wait for the Login screen to be displayed
    // TODO: Implement the execution step

    // Submit the credentials in the Login Page and attempt to login
    // TODO: Implement the execution step

    // Check if successful login takes user to Home Page or else error dialog is displayed
    // TODO: Implement the execution step

    });
  }
  ```

  Note:
  1. Only generate starter template for integration test as described in the instructions at the moment and nothing else.
  ''',
            promptOutput: starterTemplateOutput),
        PromptQueryStep(
            prompt:
                '''You are a Flutter Integrations Test writing assistant. Your task is to assist in generating integration tests by completing one of the many tasks given below that will be help in generating reliable integration tests.
            
  Take a look at the existing integration test references from user's project <References> and clearly fill any existing step (TODO comments) in the starter template for integration test <Starter Template>:
  
  Starter Template:
  ```dart
  $starterTemplateOutput
  ```
  
  References:
  ```dart
  // integration test reference 1
  $reference1

  // integration test referece 2
  $reference2
  ```
  
  Note:
  1. Only share the Starter Template with filled execution steps with user shared reference.''',
            promptOutput: referenceFilledGeneratedTest),
        PromptQueryStep(
            prompt:
                '''You are a Flutter Integrations Test writing assistant. Your task is to assist in generating integration tests by completing one of the many tasks given below that will be help in generating reliable integration tests.
   
   You have been provided an integration test with few pre-filled steps <Current Test> from integration references form user's project. Finish the remaining TODO steps from the shared contextual code from user's project <Contextual Code>:
   
   Current Test:
   ```dart
   $referenceFilledGeneratedTest
   ```
   
   Contextual Code:
   ```dart
  // contextual code 1
  $testCode1

  // contextual code 2
  $testCode2

  // contextual code 3
  $testCode3

  // contextual code 4
  $testCode4

  // contextual code 5
  $testCode5

  // contextual code 6
  $testCode6

  // contextual code 7
  $testCode7
  ````
  ''',
            promptOutput: integrationTestOutput),
        AppendToChatStep(value: '$integrationTestOutput')
      ];
}
